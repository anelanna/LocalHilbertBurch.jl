proc testn(int n){
   list ms = get_all_ms(n);
   int i;
   intvec m;
   intmat rW, DB;
   matrix N,N2;
   list result;
   for(i=1;i<=size(ms);i++){
      m = ms[i];
      print("m: " + string(m));
      N = testm(m);
      print("N=");
      result[i] = Ngen(matrix_of_degrees(N));
      print(result[i]);
   }
   return(result);
}

<"gradedHB.sing";
<"partitions.sing";
list de = list(list(1,1,1),list(1,1,7),
list(2,1,1),list(2,1,3),
list(3,3,2),list(3,1,1),list(3,1,4),
list(4,3,2),list(4,1,1),list(4,2,3),list(4,1,5),
list(5,3,2),list(5,1,1),list(5,2,3),list(5,1,6),
list(6,3,2),list(6,1,1),list(6,2,3),list(6,1,7),
list(7,3,2),list(7,1,1),list(7,2,3),list(7,1,3),list(7,1,8));
int i,j,n;
int a,b;
intvec m;
list ms;
intmat A[2][2];
for(j=1;j<=size(de);j++){
   print(de[j]);
   n = de[j][1];
   a = de[j][2];
   b = de[j][3];
   A=a,b,1,0;
   ring r = (0,c(1..1000)),(x,y),M(A);
   matrix N;
   ms = get_all_ms(n);
   for(i=1;i<=size(ms);i++){
      m = ms[i];
      print("m: " + string(m));
      N = testm(m);
      matrix_of_degrees(N)==degree_bounds(m);
   }
}
